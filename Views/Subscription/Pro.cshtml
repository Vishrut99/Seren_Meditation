<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pro Plan - Ultimate Mindfulness</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #d4edda;
        }

        .container {
            max-width: 1100px;
            margin: 50px auto;
            background: #fff;
            padding: 30px;
            border-radius: 20px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
        }

        .card {
            background-color: #f8f9fa;
            border: none;
            padding: 15px;
            border-radius: 15px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .btn-complete:disabled {
            background-color: #cce5cc !important;
            color: #155724 !important;
            border-color: #c3e6cb !important;
        }
    </style>
</head>
<body>
    <div class="container text-center">
        @if (TempData["Message"] != null)
        {
            <div class="alert alert-warning alert-dismissible fade show" role="alert">
                @TempData["Message"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        else
        {
            <h1 class="text-success">Pro Plan - Ultimate Mindfulness</h1>
            <p>Unlock the full potential of mindfulness with pro audio, video, and exclusive sessions.</p>

            <!-- Media Sessions -->
            <div class="row row-cols-1 row-cols-md-2 g-4" id="media-container"></div>

            <!-- Back Button -->
            <a asp-controller="Subscription" asp-action="Index" class="btn btn-secondary mt-4">Back to Plans</a>
        }
    </div>
    <script>
        async function markComplete(button) {
            try {
                const trackingId = button.getAttribute('data-tracking-id');
                let currentCount = parseInt(button.getAttribute('data-count')) || 0;
                console.log("Current Count:", currentCount);

                // Only increment and update if not already completed
                if (!button.classList.contains('btn-success')) {
                    const newCount = currentCount + 1;
                    console.log("New Count:", newCount);

                    const response = await fetch(`/Progress/ToggleComplete/${trackingId}`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ completedSessionsCount: newCount })
                    });

                    if (response.ok) {
                        console.log("Successfully updated");
                        const result = await response.json();
                        button.setAttribute('data-count', newCount);
                        button.classList.remove('btn-outline-dark');
                        button.classList.add('btn-success');
                        button.textContent = 'Completed';
                        button.disabled = true; // Prevent further clicks after completion
                    } else {
                        alert('Error updating session progress.');
                    }
                } else {
                    console.log("Session already completed, no further counting.");
                }
            } catch (error) {
                console.error('Error in marking complete:', error);
                alert('An unexpected error occurred.');
            }
        }

        const videoFiles = [
            "/media/v1.mp4",
            "/media/v2.mp4",
            "/media/v3.mp4",
            "/media/v4.mp4",
            "/media/v2.mp4"
        ];

        const audioFiles = [
            "/media/a1.mp3",
            "/media/a2.mp3",
            "/media/a3.mp3",
            "/media/a4.mp3",
            "/media/a2.mp3"
        ];

        const mediaContainer = document.getElementById("media-container");

        for (let i = 1; i <= 30; i++) {
            const videoUrl = videoFiles[(i - 1) % videoFiles.length];
            const audioUrl = audioFiles[(i - 1) % audioFiles.length];

            const card = document.createElement("div");
            card.className = "col";
            card.innerHTML = `
                <div class="card text-start">
                    <h5>Session ${i}</h5>
                    <video class="w-100 mb-2" height="200" controls>
                        <source src="${videoUrl}" type="video/mp4">
                        Your browser does not support the video tag.
                    </video>
                    <audio controls class="w-100 mb-2">
                        <source src="${audioUrl}" type="audio/mp3">
                        Your browser does not support the audio element.
                    </audio>
                    <button class="btn btn-outline-dark toggle-complete w-100"
                            data-count="0"
                            onclick="markComplete(this)">
                        Mark Complete
                    </button>
                </div>
            `;
            mediaContainer.appendChild(card);
        }
    </script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>